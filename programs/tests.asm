; Initialize RAM with some values
OUT 0b00000000
INIT [0x10] = 0b00000001  ; Set memory location 0x10 to 5 (binary)
LOAD R1, [0x10]           ; Load value at 0x10 into R1
IF R1 == 0b00000001 THEN OUT 0b11111111 ELSE OUT 0b00000000

OUT 0b00000001
MOV R2, 0b00000001
IF R2 == 0b00000001 THEN OUT 0b11111111 ELSE OUT 0b00000000

; BASIC MATH

; Addition
OUT 0b00000010
ADD R1, R2, R3 
IF R3 == 0b00000010 THEN OUT 0b11111111 ELSE OUT 0b00000000

; Substraction
OUT 0b00000011
SUB R3, R1, R2
IF R2 == R1 THEN OUT 0b11111111 ELSE OUT 0b00000000 

; Incrementation
OUT 0b00000100
INC R2
IF R2 == 0b00000010 THEN OUT 0b11111111 ELSE OUT 0b00000000 

; Multiplication
OUT 0b00000101
MUL R2, R2, R3
IF R3 == 0b0000100 THEN OUT 0b11111111 ELSE OUT 0b00000000 

; Division
OUT 0b00000111
DIV R3, R2, R1
IF R1 == 0b00000010 THEN OUT 0b11111111 ELSE OUT 0b00000000

; Decrementantion  
OUT 0b00001000
DEC R1
IF R1 == 0b00000001 THEN OUT 0b11111111 ELSE OUT 0b00000000


; QMOV
OUT 0b00001001
CLEAR R2
QMOV R2, R1
IF R1 == 0b00000000 THEN OUT 0b11111111 ELSE OUT 0b00000000
IF R2 == 0b00000001 THEN OUT 0b11111111 ELSE OUT 0b00000000

; LOGIC GATES

INIT [0x00] = 0b01001001  ; Set RAM[0x00] to 11001100 (binary)
INIT [0x01] = 0b01101001  ; Set RAM[0x01] to 10101010 (binary)

; Load values from RAM into registers
CLEAR R2
LOAD R0, [0x00]           ; Load RAM[0x00] into R0
LOAD R1, [0x01]           ; Load RAM[0x01] into R1

; AND operation
OUT 0b00001010
AND R0, R1, R2            ; R2 = R0 AND R1
IF R2 == 0b01001001 THEN OUT 0b11111111 ELSE OUT 0b00000000

; OR operation
OUT 0b00001011
OR R0, R1, R3             ; R3 = R0 OR R1
IF R3 == 0b01101001 THEN OUT 0b11111111 ELSE OUT 0b00000000

; NOT operation
OUT 0b00001100
NOT R0, R4                ; R4 = NOT R0
IF R4 == 0b10110110 THEN OUT 0b11111111 ELSE OUT 0b00000000

; NAND operation
OUT 0b00001101
NAND R0, R1, R5           ; R5 = R0 NAND R1
IF R5 == 0b10110110 THEN OUT 0b11111111 ELSE OUT 0b00000000

; NOR operation
OUT 0b00001110
NOR R0, R1, R6            ; R6 = R0 NOR R1
IF R6 == 0b10010110 THEN OUT 0b11111111 ELSE OUT 0b00000000

; XOR operation
OUT 0b00001111
XOR R0, R1, R7            ; R7 = R0 XOR R1
IF R7 == 0b00100000 THEN OUT 0b11111111 ELSE OUT 0b00000000

; Halt the program
HALT